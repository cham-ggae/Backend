<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지 포함한 mapper(DAO interface) 이름으로 설정 한다. -->
<mapper namespace="com.example.demo.plant.dao.PlantDao">

    <select id="getUserFid" parameterType="long" resultType="long">
        SELECT fid FROM Users WHERE uid = #{uid}
    </select>

    <select id="selectFamilyMemberCount" parameterType="long" resultType="int">
        SELECT COUNT(*) FROM Users WHERE fid = #{fid}
    </select>

    <select id="hasUncompletedPlant" parameterType="long" resultType="boolean">
        SELECT COUNT(*) > 0 FROM Plants WHERE fid = #{fid} AND is_completed = false
    </select>

    <select id="getPlantKindId" parameterType="string" resultType="int">
        SELECT kid FROM Plant_kind WHERE name = #{type}
    </select>

    <insert id="insertPlant">
        INSERT INTO Plants(fid, kid, level, experience_point, is_completed)
        VALUES(#{fid}, #{kid}, 1, 0, false)
    </insert>

    <select id="selectLatestPlantByFid" parameterType="long" resultType="com.example.demo.plant.dto.PlantStatusResponseDto">
        SELECT
        p.level,
        p.experience_point AS experiencePoint,
        p.is_completed AS completed,
        k.name AS plantType
        FROM Plants p
        JOIN Plant_kind k ON p.kid = k.kid
        WHERE p.fid = #{fid}
        ORDER BY p.created_at DESC
        LIMIT 1
    </select>

    <select id="getLatestPlantId" parameterType="long" resultType="long">
        SELECT pid FROM Plants WHERE fid = #{fid} ORDER BY created_at DESC LIMIT 1
    </select>

    <select id="isPlantCompleted" parameterType="long" resultType="boolean">
        SELECT is_completed FROM Plants WHERE pid = #{pid}
    </select>

    <update id="markPlantCompleted">
        UPDATE Plants SET is_completed = true WHERE pid = #{pid}
    </update>

    <insert id="insertRewardLog">
        INSERT INTO reward_log (uid, fid, pid, reward_id)
        VALUES (#{uid}, #{fid}, #{pid}, #{rewardId})
    </insert>

    <select id="getRewardHistory" resultType="com.example.demo.plant.dto.RewardHistoryDto">
        SELECT r.reward_name, r.description, rl.received_at
        FROM reward_log rl
        JOIN rewards r ON rl.reward_id = r.reward_id
        WHERE rl.uid = #{uid}
        ORDER BY rl.received_at DESC
    </select>
    <select id="getRewardInfoById" resultType="com.example.demo.plant.dto.RewardHistoryDto">
        SELECT reward_name, description, NOW() AS received_at
        FROM rewards
        WHERE reward_id = #{rewardId}
    </select>

</mapper>